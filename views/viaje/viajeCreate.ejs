<%-include('../base/header')-%>

<div class="container mt-4">
    <div class="card border-secondary">
        <div class="card-header">Asignar Viaje</div>
        <div class="card-body">
            <form action="/viajes" method="POST">
                <p>Seleccione la dirección del viaje: </p>
                <div id="map" style="width: 600px; height: 400px;"></div>
                <div class="mb-3">
                    <input type="hidden" class="form-control" id="direccion" name="direccion" tabindex="1">
                </div>
                <div class="mb-3">
                    <label for="taxista" class="form-label">Taxista</label>
                    <input type="text" class="form-control" id="taxista" name="taxista" tabindex="1">
                </div>
                <button type="submit" class="btn btn-pimary" tabindex="5">Guardar</button>
                <a href="/viajes" class="btn btn-secondary">Cancelar</a>
            </form>
        </div>
    </div>
</div>

<script>


	const map = L.map('map').setView([13.715757357216745, -89.20367376203717], 13);

	const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
		maxZoom: 19,
		attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
	}).addTo(map);

	const marker = L.marker([51.5, -0.09]).addTo(map);

    /*
    class Queue{
        //constructor de la cola
        constructor(){
            this.items={};
            this.front=0;
            this.end=0;
        };

        //metodo para encolar datos
        enqueue(data){
            this.items[this.end]=data;
            this.end++;
        };

        //metodo para desencolar
        dequeue(){
            if(this.front===this.end){
                return null;
            };
            const data=this.items[this.front];
            this.front++;
            return data;
        };

        //obtiene el tamanio de la cola
        getSize(){
            return this.end-this.front;
        };

        //sirve para ver si la cola esta vacia
        isEmpty(){
            if(this.getSize()===0){
                return true;
            }else{
                return false;
            };
        };

        //este metodo consulta la primera poscicion de la cola
        peek(){
            if(this.getSize()===0){
                return null;
            }else{return this,items[this.front];
            };
        };

        //funcion que imprime todos los datos en la cola 
        printf(){
            if(this.getSize()===0){
                return null;
            };
            
            let result='';
            for(let i=this.front;i<this.end;i++){
                result+="{ "+this.items[i]+" }";
            };
            return result;
        }
    };*/
    
    var popup = L.popup();
    function onMapClick(e) {
    popup
        .setLatLng([e.latlng.lat+0.001,e.latlng.lng])
        .setContent("Seleccionó viaje en Latitud:" + e.latlng.lat + " Longitud" + e.latlng.lng)
        .openOn(map);
        
    
    marker.setLatLng(e.latlng).update(); 

    str_lat = e.latlng.lat + ","+e.latlng.lng

    //var marker1 = L.marker(e.latlng).addTo(map)
    document.getElementById("direccion").setAttribute('value',str_lat);
    console.log(str_lat)
    }

    map.on('click', onMapClick);
    

</script>

<%-include('../base/footer')-%>